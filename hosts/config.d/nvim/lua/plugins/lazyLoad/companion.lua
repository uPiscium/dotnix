return {
	-- "olimorris/codecompanion.nvim",
	-- keys = {
	-- 	{
	-- 		"<Space>cf",
	-- 		":CodeCompanion<CR>",
	-- 		mode = { "n", "v" },
	-- 		silent = true,
	-- 	},
	-- 	{
	-- 		"<Space>cc",
	-- 		":CodeCompanionChat<CR>",
	-- 		mode = { "n", "v" },
	-- 		silent = true,
	-- 	},
	-- 	{
	-- 		"<Space>ca",
	-- 		":CodeCompanionAction<CR>",
	-- 		mode = { "n", "v" },
	-- 		silent = true,
	-- 	},
	-- },
	-- config = function()
	-- 	require("codecompanion").setup({
	-- 		adapters = {
	-- 			ollama_remote = function()
	-- 				return require("codecompanion.adapters").extend("ollama", {
	-- 					name = "ollama_remote",
	-- 					env = {
	-- 						url = "http://192.168.11.90:11434",
	-- 						-- api_key = "API_KEY",
	-- 					},
	-- 					headers = {
	-- 						-- ["Content-Type"] = "application/json",
	-- 						-- ["Authorization"] = "Bearer ${api_key}",
	-- 					},
	-- 					parameters = {
	-- 						sync = true,
	-- 					},
	-- 					schema = {
	-- 						model = {
	-- 							default = "qwen3:14b",
	-- 						},
	-- 						num_ctx = {
	-- 							default = 16384,
	-- 						},
	-- 						num_predict = {
	-- 							default = -1,
	-- 						},
	-- 					},
	-- 				})
	-- 			end,
	-- 		},
	-- 		strategies = {
	-- 			chat = {
	-- 				adapter = "ollama_remote",
	-- 			},
	-- 			inline = {
	-- 				adapter = "ollama_remote",
	-- 			},
	-- 			agent = {
	-- 				adapter = "ollama_remote",
	-- 			},
	-- 		},
	-- 	})
	-- end,
	-- opts = {
	-- 	allow_insecure = true,
	-- 	extensions = {
	-- 		mcphub = {
	-- 			callback = "mcphub.extensions.codecompanion",
	-- 			opts = {
	-- 				make_vars = true,
	-- 				make_slash_commands = true,
	-- 				show_result_in_chat = true,
	-- 			},
	-- 		},
	-- 	},
	-- },
	-- dependencies = {
	-- 	"nvim-lua/plenary.nvim",
	-- 	"nvim-treesitter/nvim-treesitter",
	-- 	"ravitemer/mcphub.nvim",
	-- },
}
